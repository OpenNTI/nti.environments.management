#!/bin/bash

pod=$1

source /etc/nti/container_versions
source /usr/local/lib/nti/nti-container-functions

echo "Starting $pod environment"

podroot=/opt/pods/$pod
if [ ! -e "$podroot" ]
then
  echo "Creating $podroot"
  mkdir -p $podroot
fi

t0=$(grep -e "$podroot" /proc/mounts)
if [ -z "$t0" ]
then
  if [ -e "/opt/volumes/$pod.img" ]
  then
    echo "Mounting $podroot"
    mount -o loop,rw /opt/volumes/$pod.img $podroot
    ret=$?
    if [ $ret -ne 0 ]
    then
        echo "ABORT! Attempt to mount $pod data volume failed"
        exit 7
    fi
  else
    echo "ABORT! $pod data volume missing"
    exit 6
  fi
fi

podman pod exists $pod
ret=$?
if [ "$ret" -eq 1 ]
then
  echo "Creating $pod pod"
  podman pod create --name $pod --hostname $pod.nti
  podman pod start $pod
fi

add_CNAME $pod

podman container exists $pod-solr
ret=$?
if [ "$ret" -eq 1 ]
then
  podman run --pod=$pod --volume $podroot/solr-data:/opt/solr/conf/nti/data:rw --name $pod-solr --detach --rm docker://556717414764.dkr.ecr.us-east-1.amazonaws.com/platform/solr
fi

podman container exists $pod-rsyslog
ret=$?
if [ "$ret" -eq 1 ]
then
  podman run --pod=$pod --volume $podroot/logs:/var/log:rw --name $pod-rsyslog --detach --rm docker://556717414764.dkr.ecr.us-east-1.amazonaws.com/rsyslog:latest
fi

podman container exists $pod-haproxy
ret=$?
if [ "$ret" -eq 1 ]
then
  podman run --pod=$pod --volume $podroot/run:/run:rw --name $pod-haproxy --detach --rm docker://556717414764.dkr.ecr.us-east-1.amazonaws.com/platform/haproxy
fi

podman container exists $pod-haproxy-exporter
ret=$?
if [ "$ret" -eq 1 ]
then
  podman run --pod=$pod --volume $podroot/run:/run:rw --name $pod-haproxy-exporter --detach --rm docker://556717414764.dkr.ecr.us-east-1.amazonaws.com/prometheus/haproxy-exporter
fi

podman container exists $pod-nginx
ret=$?
if [ "$ret" -eq 1 ]
then
  podman run --pod=$pod --volume $podroot/assets:/srv/assets:rw --volume $podroot/content:/srv/content:rw --volume $podroot/logs/nginx:/var/log/nginx:rw --name $pod-nginx --detach --rm docker://556717414764.dkr.ecr.us-east-1.amazonaws.com/platform/nginx
fi

podman container exists $pod-redis
ret=$?
if [ "$ret" -eq 1 ]
then
  podman run --pod=$pod --volume $podroot/redis/:/var/lib/redis:rw --volume $podroot/logs/:/var/log/redis:rw --name $pod-redis --detach --rm docker://556717414764.dkr.ecr.us-east-1.amazonaws.com/platform/redis
fi

podman container exists $pod-statsd-exporter
ret=$?
if [ "$ret" -eq 1 ]
then
  podman run --pod=$pod --name $pod-statsd-exporter --detach --rm docker://556717414764.dkr.ecr.us-east-1.amazonaws.com/prometheus/statsd-exporter:latest
fi

podman container exists $pod-web-service
ret=$?
if [ "$ret" -eq 1 ]
then
  if [ -e "$podroot/overrides/webservice" ]
  then
    podman run --pod=$pod --volume $podroot/overrides/webservice:/opt/nextthought/overrides:rw --volume $podroot/logs:/var/log:rw --name $pod-web-service --detach --rm docker://556717414764.dkr.ecr.us-east-1.amazonaws.com/platform/web-service:$webservice
  else
    podman run --pod=$pod --volume $podroot/logs:/var/log:rw --name $pod-web-service --detach --rm docker://556717414764.dkr.ecr.us-east-1.amazonaws.com/platform/web-service:$webservice
  fi
fi

podman container exists $pod-dataserver
ret=$?
if [ "$ret" -eq 1 ]
then
  podman run --pod=$pod --volume $podroot/dataserver/.boto:/home/ntiuser/.boto:ro --volume $podroot/dataserver/etc:/home/ntiuser/buildout/etc:rw --volume $podroot/dataserver/data:/home/ntiuser/buildout/data:rw --volume $podroot/logs:/home/ntiuser/buildout/var/log:rw --volume $podroot/dataserver/maildir:/home/ntiuser/buildout/var/maildir:rw --volume $podroot/assets:/srv/assets:rw --volume $podroot/content:/srv/content:rw --name $pod-dataserver --detach --rm docker://556717414764.dkr.ecr.us-east-1.amazonaws.com/platform/dataserver:$dataserver
fi

podman container exists $pod-node-exporter
ret=$?
if [ "$ret" -eq 1 ]
then
  podman run --pod=$pod --name $pod-node-exporter --detach --rm docker://556717414764.dkr.ecr.us-east-1.amazonaws.com/prometheus/node-exporter:latest
fi

podman container exists $pod-splunk
ret=$?
if [ "$ret" -eq 1 ]
then
  podman run --pod=$pod --volume $podroot/logs:/home/ntiuser/buildout/var/log:rw --volume $podroot/splunk/etc:/opt/splunk/etc:rw --volume $podroot/splunk/var:/opt/splunk/var:rw --env SPLUNK_START_ARGS="--accept-license --answer-yes" --entrypoint '[ "entrypoint.sh", "start-service"]' --name $pod-splunk --detach --rm docker://556717414764.dkr.ecr.us-east-1.amazonaws.com/splunk:latest
fi

chmod go+r $podroot/logs/*.log
