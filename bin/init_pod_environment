#!/bin/bash

pod=$1
sitename=$2
sitehostname=$3

smtpserver=email-smtp.us-east-1.amazonaws.com

source /etc/nti/container_versions

userfile=/root/pods/$pod.json

if [ ! -e /root/pods ]
then
    mkdir -p /root/pods
fi

if [ ! -e $userfile ]
then
    #Check and see if the user exists
    t0=$(aws iam --profile legacy list-users --output json | jq ".Users[] | select(.UserName==\"$pod\")")
    if [ -z "$t0" ]
    then
        aws iam --profile legacy create-user --user-name $pod > /dev/null
    fi
    aws iam --profile legacy create-access-key --user-name $pod > $userfile
    aws iam --profile legacy attach-user-policy --user-name $pod --policy-arn arn:aws:iam::569451255149:policy/NTI-SQS-ReadWriteAccess
    aws iam --profile legacy attach-user-policy --user-name $pod --policy-arn arn:aws:iam::569451255149:policy/NTISesSendingAccess
fi

accesskey=$(cat $userfile)
accesskeyid=$(echo $accesskey | jq .AccessKey.AccessKeyId | sed -e 's|"||g')
secretaccesskey=$(echo $accesskey | jq .AccessKey.SecretAccessKey | sed -e 's|"||g')
smtppass=$(computeSEScreds --region us-east-1 --secret $secretaccesskey)
podroot=/opt/pods/$pod
mkdir -p $podroot

if [ ! -e "/opt/volumes/$pod.img" ]
then
    echo "Creating and initializing data volume for pod $pod" 1>&2
    dd if=/dev/zero of=/opt/volumes/$pod.img count=0 bs=1G seek=20 1>&2
    mkfs.xfs /opt/volumes/$pod.img 1>&2
    mount -o loop,rw /opt/volumes/$pod.img $podroot 1>&2
    rsync --archive --quiet /opt/pods/base/ $podroot 1>&2
    cat /opt/pods/base/dataserver/.boto | sed -e "s|\$ACCESS_KEY_ID|$accesskeyid|g" -e "s|\$SECRET_ACCESS_KEY|$secretaccesskey|g" > $podroot/dataserver/.boto
    cat /opt/pods/base/dataserver/etc/pserve.ini | sed -e "s|\$SMTP_SERVER|$smtpserver|g" -e "s|\$SMTP_USER|$accesskeyid|g" -e "s|\$SMTP_PASSWORD|$smtppass|g" > $podroot/dataserver/etc/pserve.ini
    cat /opt/pods/base/dataserver/etc/package-includes/777-nti.app.analytics.zcml | sed -e "s|\$SITE_ID|$pod|g" -e "s|\$SITE_NAME|$sitename|g" -e "s|\$SITE_HOSTNAME|$sitehostname|g" > $podroot/dataserver/etc/package-includes/777-nti.app.analytics.zcml
    chcon -R  system_u:object_r:container_file_t:s0 $podroot
    start_pod_environment $pod
    systemd-run --on-active=60 --timer-property=AccuracySec=100ms create_initial_service_account $pod
    systemd-run --on-active=60 --timer-property=AccuracySec=100ms init_splunk_container $pod
else
    start_pod_environment $pod
fi
