#!/bin/bash

source /etc/nti/container_versions
source /usr/local/lib/nti/nti-container-functions

pod=$1

if [ -z "$ascienv" ]
then
  ascienv="asci"
fi

CONTAINERS="$pod-web-service
$pod-solr $pod-haproxy
$pod-haproxy-exporter
$pod-nginx
$pod-redis
$pod-statsd-exporter
$pod-node-exporter
$pod-rsyslog"

podman container exists $pod-dataserver
ret=$?
if [ "$ret" -eq 0 ]
then
    systemctl disable "nti-dataserver-logrotate@$pod.service" 1>&2
    systemctl disable "nti-dataserver-logrotate@$pod.timer" 1>&2
    systemctl stop "nti-dataserver-logrotate@$pod.timer" 1>&2
    systemctl disable "nti-notable-digest@$pod.service" 1>&2
    systemctl disable "nti-notable-digest@$pod.timer" 1>&2
    systemctl stop "nti-notable-digest@$pod.timer" 1>&2
    systemctl disable "nti-process-bounce-queue@$pod.service" 1>&2
    systemctl disable "nti-process-bounce-queue@$pod.timer" 1>&2
    systemctl stop "nti-process-bounce-queue@$pod.timer" 1>&2
    systemctl disable "nti-refresh-auth-token@$pod.service" 1>&2
    systemctl disable "nti-refresh-auth-token@$pod.timer" 1>&2
    systemctl stop "nti-refresh-auth-token@$pod.timer" 1>&2
    remove_SRV_record $pod _dataserver_gp._tcp.$pod.nti 8081 1>&2
    podman exec $pod-dataserver /home/ntiuser/buildout/bin/supervisorctl shutdown 1>&2
fi

podman container exists $pod-sockets
ret=$?
if [ "$ret" -eq 0 ]
then
    remove_SRV_record $pod _dataserver_sockets._tcp.$pod.nti 8088 1>&2
    podman exec $pod-sockets /home/ntiuser/buildout/bin/supervisorctl shutdown 1>&2
fi

for container in $CONTAINERS
do
    podman container exists $container
    ret=$?
    if [ "$ret" -eq 0 ]
    then
        if [ $container == "$pod-statsd-exporter" ]
        then
            remove_SRV_record $pod _statsd_exporter._tcp.$ascienv.nti 9102 1>&2
        fi
        if [ $container == "$pod-nginx" ]
        then
            remove_SRV_record $pod _static_content._tcp.$pod.nti 8085 1>&2
        fi
        podman stop $container 1>&2
    fi
done

for container in $CONTAINERS
do
    podman container exists $container
    ret=$?
    if [ "$ret" -eq 0 ]
    then
        podman rm $container 1>&2
    fi
done

podman container exists $pod-dataserver
ret=$?
until [ "$ret" -eq 1 ]
do
    sleep 1
    podman container exists $pod-dataserver
    ret=$?
done

podman container exists $pod-sockets
ret=$?
until [ "$ret" -eq 1 ]
do
    sleep 1
    podman container exists $pod-sockets
    ret=$?
done
